parameters:
  arch:
  container:  
  demands: []
  target:

jobs:
  - job: jucx_build_${{ parameters.arch }}
    displayName: JUCX build ${{ parameters.arch }}
    variables:
      temp_cfg: $(System.DefaultWorkingDirectory)/bindings/java/src/main/native/tmp-settings.xml
      gpg_dir: $(System.DefaultWorkingDirectory)/bindings/java/src/main/native/build-java/gpg
      ${{ if ne(parameters.arch, 'amd64') }}:
        SUFFIX: "-${{ parameters.arch }}"

    # we need to use lowest version for compatibility
    container: ${{ parameters.container }}    
    pool:
      name: MLNX
      demands: ${{ parameters.demands }}

    steps:
      - checkout: self
        clean: true
        fetchDepth: 200
        retryCountOnTaskFailure: 5
        path: "we/need/to/go/deeper"
        # ^workaround agent issue with container in root path

      - bash: |
          set -eEx
          gcc --version
          ./autogen.sh
          ./contrib/configure-release --with-java
        displayName: Configure

      - bash: |
          set -eEx
          make -s -j`nproc`
          source buildlib/az-helpers.sh
          az_init_modules
          az_module_load dev/mvn
          # use the lowest supported Java version for compatibility:
          az_module_load dev/jdk-1.8
          TAG=`git describe --tags`
          # Maven requires version to be of form MAJOR_VERSION.MINOR_VERSIOn,...
          # ucx tags are of form v1.x.x - need to remove 'v' from the beginning of string
          MAVEN_VERSION=${TAG:1}
          make -C bindings/java/src/main/native/ package JUCX_VERSION=${MAVEN_VERSION}
        displayName: Build JUCX

      - bash: |
          set -eE
          {
            echo -e "<settings><servers><server>"
            echo -e "<id>ossrh</id><username>\${env.SONATYPE_USERNAME}</username>"
            echo -e "<password>\${env.SONATYPE_PASSWORD}</password>"
            echo -e "</server></servers></settings>"
          } > $(temp_cfg)
        displayName: Generate temporary config

      - task: DownloadSecureFile@1
        displayName: Download Secure file
        inputs:
          secureFile: sparkucx-secret.gpg
        name: privateKey

      - task: DownloadSecureFile@1
        displayName: Download Secure file
        inputs:
          secureFile: sparkucx-public.gpg
        name: publicKey

      - bash: |
          set -exE
          source buildlib/az-helpers.sh
          az_init_modules
          az_module_load dev/mvn
          # use the lowest supported Java version for compatibility:
          az_module_load dev/jdk-1.8
          mvn --version
          mkdir -p $(gpg_dir)
          export GPG_TTY=`tty`
          chmod 700 $(gpg_dir)
          cp $(publicKey.secureFilePath)  $(gpg_dir)/pubring.gpg
          cp $(privateKey.secureFilePath) $(gpg_dir)/secring.gpg
          export GNUPGHOME=$(gpg_dir)

          # GPG agent config
          echo "use-agent" > $GNUPGHOME/gpg.conf
          echo "pinentry-mode loopback" >> $GNUPGHOME/gpg.conf
          echo "allow-loopback-pinentry" > $GNUPGHOME/gpg-agent.conf
          gpg-connect-agent reloadagent /bye || true

          TAG=`git describe --tags`
          # Maven requires version to be of form MAJOR_VERSION.MINOR_VERSIOn,...
          # ucx tags are of form v1.x.x - need to remove 'v' from the beginning of string
          MAVEN_VERSION=${TAG:1}
          make -C bindings/java/src/main/native/ ${{ parameters.target }} \
              ARGS="--settings $(temp_cfg)" \
              JUCX_VERSION=${MAVEN_VERSION}${SUFFIX}
        displayName: Publish-Maven
        condition: eq(variables['Build.Reason'], 'IndividualCI')
        env:
          GPG_PASSPHRASE: $(GPG_PASSPHRASE)
          SONATYPE_PASSWORD: $(SONATYPE_PASSWORD)
          SONATYPE_USERNAME: $(SONATYPE_USERNAME)
