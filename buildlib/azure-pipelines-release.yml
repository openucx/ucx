# See https://aka.ms/yaml
# This pipeline to be run on tags creation

trigger:
  tags:
    include:
      - v*
pr:
  - master
  - v*.*.x

variables:
  DOCKER_OPT_VOLUMES: -v /hpc/local:/hpc/local

resources:
  containers:
    - container: centos7_cuda11
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/centos7-mofed5-cuda11:2
      options: $(DOCKER_OPT_VOLUMES)
    - container: centos8_cuda11
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/centos8-mofed5-cuda11:2
    - container: ubuntu16_cuda11
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/ubuntu16.04-mofed5-cuda11:3
    - container: ubuntu18_cuda11
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/ubuntu18.04-mofed5-cuda11:3
    - container: ubuntu20_cuda11
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/ubuntu20.04-mofed5-cuda11:3
    - container: ubuntu22_cuda11
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/x86_64/ubuntu22.04-mofed5-cuda11:3

stages:
  - stage: Prepare
    jobs:
      - job: CheckRelease
        pool:
          name: MLNX
          demands:
          - ucx_docker -equals yes
        steps:
          - checkout: self
            fetchDepth: 100
            clean: true

          - bash: |
              set -eE
              source ./buildlib/az-helpers.sh
              set -x
              check_release_build $(Build.Reason) $(Build.SourceVersion) "AZP/RELEASE: "
            name: Result
            displayName: Check build condition

  # Create an empty draft to avoid race condition in distro releases
  - stage: GitHubDraft
    condition: eq(dependencies.Prepare.outputs['CheckRelease.Result.Launch'], 'True')
    dependsOn: Prepare
    jobs:
      - job: DraftRelease
        displayName: Create draft release
        container: centos7_cuda11
        pool:
          name: MLNX
          demands:
          - ucx_docker -equals yes
        steps:
        - checkout: self
          clean: true
          fetchDepth: 100
          path: "we/need/to/go/deeper"

        - bash: ./autogen.sh
          displayName: Setup autotools

        - bash: |
            set -eE
            gcc --version
            ./contrib/configure-release --with-java=no
            ./contrib/buildrpm.sh -s -t -b
          displayName: Build tarball

        - task: GithubRelease@0
          condition: eq(variables['Build.Reason'], 'IndividualCI')
          displayName: Create/edit GitHub Draft Release
          inputs:
            githubConnection: release
            repositoryName: openucx/ucx
            action: edit
            tag: $(Build.SourceBranchName)
            isDraft: true
            addChangeLog: false
            releaseNotesSource: file
            releaseNotesFile: NEWS
            assetUploadMode: replace
            assets: |
              ./ucx-*.tar.gz
              ./rpm-dist/ucx-*.src.rpm

  - stage: Build
    displayName: Build binary packages
    dependsOn:
      - Prepare
      - GitHubDraft
    condition: eq(dependencies.Prepare.outputs['CheckRelease.Result.Launch'], 'True')
    jobs:
      - template: az-distro-release.yml
      - template: jucx/jucx-publish.yml
        parameters:
          ${{ if eq(variables['Build.Reason'], 'IndividualCI') }}:
            target: publish-release
          ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
            target: package
