variables:
  DOCKER_OPT_VOLUMES: -v /hpc/local:/hpc/local -v /auto/sw_tools:/auto/sw_tools
  DOCKER_OPT_IB: --ulimit memlock=-1:-1 --device=/dev/infiniband/ --net=host
  DOCKER_OPT_GPU: --gpus all --device=/dev/gdrdrv --ipc=host $(DOCKER_OPT_IB)
  DOCKER_OPT_ARGS: --cap-add=SYS_PTRACE

resources:
  containers:
    - container: centos7
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/centos7:4
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES)
    - container: centos7_ib
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/centos7:5
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES) $(DOCKER_OPT_IB)
    - container: centos7_cuda11
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/centos7-mofed5.4-cuda11:1
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES) $(DOCKER_OPT_GPU)
    - container: fedora
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/fedora33:2
      options: $(DOCKER_OPT_ARGS)
    - container: fedora41
      image: rdmz-harbor.rdmz.labs.mlnx/hpcx/x86_64/fedora41/builder:inbox
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES)
    - container: coverity_rh7
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/coverity:mofed-5.1-2.3.8.0
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES)
    - container: rhel76
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/x86_64/rhel7.6/builder:mofed-5.0-1.0.0.0
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES)
    - container: rhel82
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/x86_64/rhel8.2/builder:mofed-5.0-1.0.0.0
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES)
    - container: rhel90
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/x86_64/rhel9.0/builder:mofed-5.6-0.5.0.0
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES)
    - container: rhel90_ib
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/x86_64/rhel9.0/builder:mofed-5.6-0.5.0.0
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES) $(DOCKER_OPT_IB)
    - container: ubuntu2004
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/x86_64/ubuntu20.04/builder:mofed-5.0-1.0.0.0
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES)
    - container: ubuntu2204
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/x86_64/ubuntu22.04/builder:mofed-5.7-0.2.3.0
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES)
    - container: ubuntu2204_ib
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/x86_64/ubuntu22.04/builder:mofed-5.7-0.2.3.0
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES) $(DOCKER_OPT_IB)
    - container: ubuntu2210
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/x86_64/ubuntu22.10/builder:mofed-5.8-0.2.1.0
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES)
    - container: ubuntu1804
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/x86_64/ubuntu18.04/builder:mofed-5.0-1.0.0.0
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES)
    - container: ubuntu2404
      image: rdmz-harbor.rdmz.labs.mlnx/hpcx/x86_64/ubuntu24.04/builder:doca-2.9.0
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES)
    - container: debian113
      image: rdmz-harbor.rdmz.labs.mlnx/hpcx/x86_64/debian11.3/builder:mofed-5.8-3.0.7.0
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES)
    - container: debian109
      image: rdmz-harbor.rdmz.labs.mlnx/hpcx/x86_64/debian10.9/builder:mofed-5.8-3.0.7.0
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES)
    - container: debian125
      image: rdmz-harbor.rdmz.labs.mlnx/hpcx/x86_64/debian12.5/builder:doca-2.9.0
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES)
    - container: sles15sp6
      image: rdmz-harbor.rdmz.labs.mlnx/hpcx/x86_64/sles15sp6/builder:doca-2.9.0
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES)
    - container: centos7_cuda_11_0
      image: nvidia/cuda:11.0.3-devel-centos7
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: centos7_cuda_11_1
      image: nvidia/cuda:11.1.1-devel-centos7
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: centos7_cuda_11_2
      image: nvidia/cuda:11.2.2-devel-centos7
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: centos7_cuda_11_3
      image: nvidia/cuda:11.3.1-devel-centos7
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: centos7_cuda_11_4
      image: nvidia/cuda:11.4.3-devel-centos7
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: ubi8_cuda_11_5
      image: nvidia/cuda:11.5.2-devel-ubi8
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: ubi8_cuda_11_6
      image: nvidia/cuda:11.6.2-devel-ubi8
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: ubuntu18_cuda_11_0
      image: nvidia/cuda:11.0.3-devel-ubuntu18.04
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: ubuntu18_cuda_11_1
      image: nvidia/cuda:11.1.1-devel-ubuntu18.04
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: ubuntu18_cuda_11_2
      image: nvidia/cuda:11.2.2-devel-ubuntu18.04
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: ubuntu18_cuda_11_3
      image: nvidia/cuda:11.3.1-devel-ubuntu18.04
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: ubuntu18_cuda_11_4
      image: nvidia/cuda:11.4.3-devel-ubuntu18.04
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: ubuntu18_cuda_11_5
      image: nvidia/cuda:11.5.2-devel-ubuntu18.04
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: ubuntu18_cuda_11_6
      image: nvidia/cuda:11.6.2-devel-ubuntu18.04
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: ubuntu20_cuda_11_0
      image: nvidia/cuda:11.0.3-devel-ubuntu20.04
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: ubuntu20_cuda_11_1
      image: nvidia/cuda:11.1.1-devel-ubuntu20.04
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: ubuntu20_cuda_11_2
      image: nvidia/cuda:11.2.2-devel-ubuntu20.04
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: ubuntu20_cuda_11_3
      image: nvidia/cuda:11.3.1-devel-ubuntu20.04
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: ubuntu20_cuda_11_4
      image: nvidia/cuda:11.4.3-devel-ubuntu20.04
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: ubuntu20_cuda_11_5
      image: nvidia/cuda:11.5.2-devel-ubuntu20.04
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: ubuntu20_cuda_11_6
      image: nvidia/cuda:11.6.2-devel-ubuntu20.04
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: centos7_cuda_12_0
      image: nvidia/cuda:12.0.0-devel-centos7
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: centos7_cuda_12_1
      image: nvidia/cuda:12.1.0-devel-centos7
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: ubuntu18_cuda_12_0
      image: nvidia/cuda:12.0.0-devel-ubuntu18.04
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: ubuntu18_cuda_12_1
      image: nvidia/cuda:12.1.0-devel-ubuntu18.04
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: ubuntu20_cuda_12_0
      image: nvidia/cuda:12.0.0-devel-ubuntu20.04
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: ubuntu20_cuda_12_1
      image: nvidia/cuda:12.1.0-devel-ubuntu20.04
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: ubuntu22_cuda_12_0
      image: nvidia/cuda:12.0.0-devel-ubuntu22.04
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: ubuntu22_cuda_12_1
      image: nvidia/cuda:12.1.0-devel-ubuntu22.04
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_GPU)
    - container: centos8_cuda11
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/centos8-mofed5-cuda11:1
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES) $(DOCKER_OPT_GPU)
    - container: centos8_cuda11_asan
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/centos8-mofed23-cuda11_asan:1
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES) $(DOCKER_OPT_GPU)
    - container: ubuntu16_cuda11
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/ubuntu16.04-mofed5-cuda11:1
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES) $(DOCKER_OPT_GPU)
    - container: ubuntu18_cuda11
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/ubuntu18.04-mofed5-cuda11:1
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES) $(DOCKER_OPT_GPU)
    - container: ubuntu20_cuda11
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/ubuntu20.04-mofed5-cuda11:1
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES) $(DOCKER_OPT_GPU)
    - container: ubuntu2004_rocm_5_4_0
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/x86_64/ubuntu2004:rocm_5_4_0
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES)
    - container: ubuntu22_cuda12
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/x86_64/ubuntu22.04-mofed5-cuda12:3
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES) $(DOCKER_OPT_GPU)
    - container: ubuntu2204_rocm_6_0_0
      image: rdmz-harbor.rdmz.labs.mlnx/ucx/x86_64/ubuntu2204:rocm-6.0.0
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES)
    - container: kylin10sp3
      image: rdmz-harbor.rdmz.labs.mlnx/hpcx/x86_64/kylin10sp3/builder:doca-2.9.0
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES)
    - container: euleros2sp12
      image: rdmz-harbor.rdmz.labs.mlnx/hpcx/x86_64/euleros2.0sp12/builder:doca-2.9.0
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES)
    - container: centos10stream
      image: rdmz-harbor.rdmz.labs.mlnx/hpcx/x86_64/centos10stream/builder:inbox
      options: $(DOCKER_OPT_ARGS) $(DOCKER_OPT_VOLUMES)

stages:
  - stage: Codestyle
    jobs:
    - template: codestyle.yml

  - stage: Static_check
    dependsOn: [Codestyle]
    jobs:
    - template: static_checks.yml

  - stage: Build
    dependsOn: [Static_check]
    jobs:
      - job: build_source
        pool:
          name: MLNX
          demands:
            - ucx_docker -equals yes
        strategy:
          matrix:
            rhel76:
              CONTAINER: rhel76
              long_test: yes
            ubuntu2004:
              CONTAINER: ubuntu2004
              long_test: yes
              extra_modules: ""
            ubuntu1804:
              CONTAINER: ubuntu1804
              extra_modules: ""
            ubuntu2204:
              CONTAINER: ubuntu2204
            ubuntu2404:
              CONTAINER: ubuntu2404
            ubuntu2210:
              CONTAINER: ubuntu2210
            debian113:
              CONTAINER: debian113
            debian109:
              CONTAINER: debian109
            debian125:
              CONTAINER: debian125
            sles15sp6:
              CONTAINER: sles15sp6
            rhel82:
              CONTAINER: rhel82
            rhel90:
              CONTAINER: rhel90
            fedora41:
              CONTAINER: fedora41
            centos7:
              CONTAINER: centos7_ib
            centos10stream:
              CONTAINER: centos10stream
            ubuntu2004_rocm:
              CONTAINER: ubuntu2004_rocm_5_4_0
            ubuntu2204_rocm:
              CONTAINER: ubuntu2204_rocm_6_0_0
            kylin10sp3:
              CONTAINER: kylin10sp3
            euleros2sp12:
              CONTAINER: euleros2sp12
        container: $[ variables['CONTAINER'] ]
        timeoutInMinutes: 340

        steps:
          - checkout: self
            clean: true
            fetchDepth: 100
            retryCountOnTaskFailure: 5

          - bash: |
              ./buildlib/tools/builds.sh
            displayName: Build
            env:
              BUILD_ID: "$(Build.BuildId)-$(Build.BuildNumber)"
              long_test: $(long_test)
              test_static: $(test_static)

  - stage: ucx_perftest_mad_rte
    dependsOn: [Static_check]
    displayName: ucx_perftest over MAD RTE
    lockBehavior: sequential
    variables:
      - group: concurrency_lock
    jobs:
    - template: mad_tests.yml

  - stage: WireCompat
    dependsOn: [Static_check]
    jobs:
    - template: wire_compat.yml
      parameters:
        name: althca
        demands: ucx_althca -equals yes
    - template: wire_compat.yml
      parameters:
        name: gpu
        demands: ucx_gpu -equals yes
        container: centos7_cuda11
        ucx_targets:
          ucx_1_15:
            ucx_tag: v1.15.x
          ucx_1_16:
            ucx_tag: v1.16.x
          ucx_1_17:
            ucx_tag: v1.17.x
          ucx_1_18:
            ucx_tag: v1.18.x
    - template: wire_compat.yml
      parameters:
        name: new
        demands: ucx_new -equals yes
    # Temporarily disable wire-compat tests on rain machines
    #- template: wire_compat.yml
    #  parameters:
    #    name: bond
    #    demands: ucx_iodemo -equals yes

  - stage: Coverity
    dependsOn: [Static_check]
    jobs:
      - template: coverity.yml
        parameters:
          demands: ucx_docker -equals yes
          container: coverity_rh7

  - stage: Tests
    dependsOn: [Static_check]
    jobs:
    - template: tests.yml
      parameters:
        name: althca
        demands: ucx_althca -equals yes
        test_perf: 0
    - template: tests.yml
      parameters:
        name: gpu
        demands: ucx_gpu -equals yes
        test_perf: 1
        container: centos7_cuda11
    - template: tests.yml
      parameters:
        name: new
        demands: ucx_new -equals yes
        test_perf: 1
    - template: tests.yml
      parameters:
        name: roce
        demands: ucx_roce -equals yes
        test_perf: 0
    - template: tests.yml
      parameters:
        name: roce_proto_disable
        demands: ucx_roce -equals yes
        test_perf: 0
        proto_enable: no
    - template: tests.yml
      parameters:
        name: BlueField
        demands: ucx_bf -equals yes
        run_tests: yes
        test_perf: 0

  - stage: EFA_Tests
    dependsOn: [Static_check]
    jobs:
    - template: efa.yml
      parameters:
        name: EFA
        demands: ucx_new -equals yes

  - stage: Namespace_Tests
    dependsOn: [Static_check]
    jobs:
    - template: namespace_tests.yml
      parameters:
        name: new_namespace
        demands: ucx_new -equals yes

  - stage: io_demo
    dependsOn: [Static_check]
    jobs:
    - template: io_demo/io-demo.yml

  - stage: jucx
    dependsOn: [Static_check]
    jobs:
      - template: ../jucx/jucx-test.yml
        parameters:
          arch: amd64
          name: gpu
          demands: ucx_gpu

      - template: ../jucx/jucx-test.yml
        parameters:
          arch: aarch64
          demands: ucx-arm64

  - stage: go
    dependsOn: [Static_check]
    jobs:
      - template: go/go-test.yml
        parameters:
          name: new
          demands: ucx_new -equals yes
      - template: go/go-test.yml
        parameters:
            name: gpu
            demands: ucx_gpu -equals yes

  - stage: Build_Static
    dependsOn: [Static_check]
    jobs:
      - job: build_source
        pool:
          name: MLNX
          demands:
            - ucx_docker -equals yes
        strategy:
          matrix:
            centos7:
              CONTAINER: centos7_ib
              extra_modules: ucx-ib ucx-cma ucx-rdmacm ucx-ib-mlx5
              extra_tls: dc_mlx5 rc_mlx5 ud_mlx5 rc_verbs ud_verbs cma
              run_tls: ib rc rc_v rc_x dc dc_x ud ud_v ud_x shm sm
            ubuntu2004:
              CONTAINER: ubuntu2004
              extra_modules: ""
              extra_tls: ""
              run_tls: ""
            ubuntu1804:
              CONTAINER: ubuntu1804
              extra_modules: ""
              extra_tls: ""
              run_tls: ""
        container: $[ variables['CONTAINER'] ]
        timeoutInMinutes: 340

        steps:
          - checkout: self
            clean: true
            fetchDepth: 100
            retryCountOnTaskFailure: 5

          - bash: |
              ./buildlib/tools/build_static.sh
            displayName: Build
            env:
              EXTRA_TLS: $(extra_tls)
              RUN_TLS: $(run_tls)
              EXTRA_MODULES: $(extra_modules)
              EXECUTOR_NUMBER: $(AZP_AGENT_ID)


  - stage: Cuda
    dependsOn: [Static_check]
    jobs:
      - template: cuda/cuda.yml


  - stage: AddressSanitizer
    dependsOn: [Static_check]
    jobs:
    - template: tests.yml
      parameters:
        name: gpu
        demands: ucx_gpu -equals yes
        test_perf: 0
        container: centos8_cuda11_asan
        asan_check: yes
    - template: tests.yml
      parameters:
        name: new
        demands: ucx_new -equals yes
        test_perf: 0
        container: ubuntu2204_ib
        asan_check: yes
    - template: tests.yml
      parameters:
        name: roce
        demands: ucx_roce -equals yes
        test_perf: 0
        container: ubuntu2204_ib
        asan_check: yes
    - template: tests.yml
      parameters:
        name: roce_proto_disable
        demands: ucx_roce -equals yes
        test_perf: 0
        proto_enable: no
        container: ubuntu2204_ib
        asan_check: yes
    - template: tests.yml
      parameters:
        name: BlueField
        demands: ucx_bf -equals yes
        test_perf: 0
        asan_check: yes


#  - stage: Cuda_compatible
#    dependsOn: [Static_check]
#    jobs:
#    - template: cuda/cuda_compatible.yml
