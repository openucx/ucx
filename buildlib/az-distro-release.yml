jobs:
  - job: distro_release
    displayName: distro
    variables:
      ${{ if eq(variables['Build.Reason'], 'ResourceTrigger') }}:
        POSTFIX: ucx-${{ replace(variables['Build.SourceBranch'], 'refs/heads/', '') }}
      ${{ if eq(variables['Build.Reason'], 'IndividualCI') }}:
        POSTFIX: ucx-${{ replace(variables['Build.SourceBranch'], 'refs/tags/v', '') }}
      ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
        POSTFIX: ucx-pr$(System.PullRequest.PullRequestNumber)

    pool:
      name: MLNX
      demands:
        - harbor_registry -equals yes

    strategy:
      matrix:
        centos7_cuda11:
          build_container: centos7_cuda11
          artifact_name: $(POSTFIX)-centos7-mofed5-cuda11.tar.bz2
        centos8_cuda11:
          build_container: centos8_cuda11
          artifact_name: $(POSTFIX)-centos8-mofed5-cuda11.tar.bz2
        ubuntu18_cuda11:
          build_container: ubuntu18_cuda11
          artifact_name: $(POSTFIX)-ubuntu18.04-mofed5-cuda11.tar.bz2
        ubuntu20_cuda11:
          build_container: ubuntu20_cuda11
          artifact_name: $(POSTFIX)-ubuntu20.04-mofed5-cuda11.tar.bz2
        ubuntu22_cuda11:
          build_container: ubuntu22_cuda11
          artifact_name: $(POSTFIX)-ubuntu22.04-mofed5-cuda11.tar.bz2

    container: $[ variables['build_container'] ]

    steps:
      - checkout: self
        clean: true
        fetchDepth: 100
        path: "we/need/to/go/deeper"
        # ^ Avoid rpmbuild error: Dest dir longer than base dir is not supported

      - bash: |
          set -eEx
          ./autogen.sh
          mkdir -p pkg-build
          cd pkg-build
          ../contrib/configure-release --with-cuda --with-java=no
          ../contrib/buildrpm.sh -s -t -b --noclean
          cd rpm-dist/`uname -m`
          tar -cjf "../../../${AZ_ARTIFACT_NAME}" *.rpm
          cd ../../..
          tar -tjf "${AZ_ARTIFACT_NAME}"
        displayName: Build RPM package
        condition: and(succeeded(), contains(variables['artifact_name'], 'centos'))
        env:
          AZ_ARTIFACT_NAME: $(artifact_name)

      - bash: |
          set -eEx

          # Build
          ./autogen.sh
          ./contrib/configure-release --with-cuda --with-java=no
          make dist
          tarball=$(echo ucx*.tar.gz)
          tar -xzvf ${tarball}              # extract the sources in a subdirectory
          cd $(tar tf ${tarball} | head -1) # go to extracted tarball directory
          echo 10 > debian/compat   # https://www.debian.org/doc/manuals/maint-guide/dother.en.htmdpl#compat
          dpkg-buildpackage -us -uc -Pcuda
          cd ..                             # Move back to the working directory

          # Rename DEB files          
          VER="${POSTFIX#ucx-}"     # Remove 'ucx-' prefix from the POSTFIX string
          find . -name "ucx*.deb" -exec bash -c 'mv "$1" "${1%%_*}-'"${VER}"'.deb"' _ {} \;
          find . -name '*.deb'      # Show new names

          # Remove superfluous dependency
          dpkg-deb -R "ucx-cuda-${VER}.deb" tmp    # Extract
          sed -i 's/libnvidia-compute-[0-9]* | libnvidia-ml1, //g' tmp/DEBIAN/control
          dpkg-deb -b tmp "ucx-cuda-${VER}.deb"        # Rebuild
          dpkg-deb -I "ucx-cuda-${VER}.deb"
          dpkg-deb -I "ucx-${VER}.deb"

          # Package
          tar -cjf "${AZ_ARTIFACT_NAME}" *.deb  # Package all DEBs
          tar -tjf "${AZ_ARTIFACT_NAME}"
        displayName: Build DEB package
        condition: and(succeeded(), contains(variables['artifact_name'], 'ubuntu'))
        env:
          AZ_ARTIFACT_NAME: $(artifact_name)

      - task: GithubRelease@0
        condition: eq(variables['Build.Reason'], 'IndividualCI')
        displayName: Upload artifacts
        inputs:
          githubConnection: release
          repositoryName: openucx/ucx
          action: edit
          tag: $(Build.SourceBranchName)
          isDraft: true
          addChangeLog: false
          assetUploadMode: replace
          assets: "./$(artifact_name)"
