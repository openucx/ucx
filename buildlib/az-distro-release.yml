jobs:
  - job: distro_release
    displayName: distro

    pool:
      name: MLNX
      demands:
        - harbor_registry -equals yes

    strategy:
      matrix:
        ubuntu18_cuda11_1_debug:
          build_container: ubuntu18_cuda11_1
          artifact_name: ucx-nightly-dbg-ubuntu18.04-mofed5.0-cuda11.1.deb
          configure_mode: devel
        ubuntu18_cuda11_1:
          build_container: ubuntu18_cuda11_1
          artifact_name:  ucx-nightly-ubuntu18.04-mofed5.0-cuda11.1.deb
          configure_mode: release

    container: $[ variables['build_container'] ]

    steps:
      - checkout: self
        clean: true
        path: "we/need/to/go/deeper"
        # ^ Avoid rpmbuild error: Dest dir longer than base dir is not supported

      - bash: |
          set -eE
          ./autogen.sh
          mkdir pkg-build
          cd pkg-build
          ../contrib/configure-${CONFIGURE_MODE} --with-cuda --with-valgrind=no
        displayName: Configure
        env:
          CONFIGURE_MODE: $(configure_mode)

      - bash: |
          set -eE
          cd pkg-build
          ../contrib/buildrpm.sh -s -t -b --strict-ibverbs-dep
          cd rpm-dist/`uname -m`
          tar -cjf "../../../${AZ_ARTIFACT_NAME}" *.rpm
          cd ../../..
          tar -tjf "${AZ_ARTIFACT_NAME}"
        displayName: Build RPM package
        condition: and(succeeded(), contains(variables['artifact_name'], 'centos'))
        env:
          AZ_ARTIFACT_NAME: $(artifact_name)

      - bash: |
          set -eE
          cd pkg-build
          dpkg-buildpackage -us -uc
          find .. -name '*.deb'
          find .. -name '*.deb' -exec cp {} "../${AZ_ARTIFACT_NAME}" \;
          dpkg-deb -I "../${AZ_ARTIFACT_NAME}"
        displayName: Build DEB package
        condition: and(succeeded(), contains(variables['artifact_name'], 'ubuntu'))
        env:
          AZ_ARTIFACT_NAME: $(artifact_name)

      - task: GithubRelease@0
        displayName: Upload artifacts to draft release
        condition: contains(variables['Build.SourceBranch'], 'refs/tags/')
        inputs:
          githubConnection: release
          repositoryName: openucx/ucx
          action: edit
          tag: $(Build.SourceBranchName)
          isDraft: true
          addChangeLog: false
          assetUploadMode: replace
          assets: "./$(artifact_name)"

      - task: CopyFiles@2
        inputs:
          sourceFolder: '$(Build.Repository.LocalPath)'
          contents: |
              "./$(artifact_name)"
          targetFolder: '$(Build.ArtifactStagingDirectory)'

      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: "./$(artifact_name)"
